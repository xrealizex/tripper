[{"/Users/hiroto/Documents/portfolio/tripper/src/components/pages/Home/HomeLayout.tsx":"1","/Users/hiroto/Documents/portfolio/tripper/src/components/pages/TripList/AddTripPlan.tsx":"2","/Users/hiroto/Documents/portfolio/tripper/src/components/pages/TripList/PostForm.tsx":"3","/Users/hiroto/Documents/portfolio/tripper/src/firebase.ts":"4","/Users/hiroto/Documents/portfolio/tripper/src/pages/Login/Login.tsx":"5","/Users/hiroto/Documents/portfolio/tripper/src/pages/Main/Plan/[id].tsx":"6","/Users/hiroto/Documents/portfolio/tripper/src/pages/Main/TripLists.tsx":"7","/Users/hiroto/Documents/portfolio/tripper/src/pages/Register/Register.tsx":"8","/Users/hiroto/Documents/portfolio/tripper/src/pages/_app.tsx":"9","/Users/hiroto/Documents/portfolio/tripper/src/pages/api/AuthInfo.tsx":"10","/Users/hiroto/Documents/portfolio/tripper/src/pages/api/hello.ts":"11","/Users/hiroto/Documents/portfolio/tripper/src/pages/index.tsx":"12","/Users/hiroto/Documents/portfolio/tripper/src/router/router.ts":"13","/Users/hiroto/Documents/portfolio/tripper/src/sample/index.tsx":"14","/Users/hiroto/Documents/portfolio/tripper/src/store.ts":"15","/Users/hiroto/Documents/portfolio/tripper/src/types/Post.ts":"16","/Users/hiroto/Documents/portfolio/tripper/src/userSlice.ts":"17"},{"size":2381,"mtime":1669122779327,"results":"18","hashOfConfig":"19"},{"size":932,"mtime":1668296752919,"results":"20","hashOfConfig":"19"},{"size":2600,"mtime":1669122692094,"results":"21","hashOfConfig":"19"},{"size":877,"mtime":1662884360255,"results":"22","hashOfConfig":"19"},{"size":4039,"mtime":1668940548499,"results":"23","hashOfConfig":"19"},{"size":5442,"mtime":1668924328729,"results":"24","hashOfConfig":"19"},{"size":3304,"mtime":1668924328729,"results":"25","hashOfConfig":"19"},{"size":6231,"mtime":1668940548499,"results":"26","hashOfConfig":"19"},{"size":361,"mtime":1667724160883,"results":"27","hashOfConfig":"19"},{"size":779,"mtime":1668940548499,"results":"28","hashOfConfig":"19"},{"size":305,"mtime":1661868314026,"results":"29","hashOfConfig":"19"},{"size":680,"mtime":1665318230251,"results":"30","hashOfConfig":"19"},{"size":482,"mtime":1668296752920,"results":"31","hashOfConfig":"19"},{"size":81,"mtime":1661868408106,"results":"32","hashOfConfig":"19"},{"size":417,"mtime":1662814928974,"results":"33","hashOfConfig":"19"},{"size":148,"mtime":1667254837197,"results":"34","hashOfConfig":"19"},{"size":889,"mtime":1665498110618,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"1ueqybl",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hiroto/Documents/portfolio/tripper/src/components/pages/Home/HomeLayout.tsx",["89"],[],"//- フレームワーク\nimport { NextPage, GetStaticProps } from 'next';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//- 共通\nimport { auth } from '../../../firebase';\nimport { login } from '../../../userSlice';\nimport { Router } from '../../../router/router';\n\n//- スタイル\nimport styles from './HomeLayout.module.scss';\nimport EntranceImage from '../../../../public/images/entrance.jpg';\n\n//- MUI;\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nconst HomeLayout: NextPage = () => {\n  //- フレームワーク\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  //- 関数定義\n  const onClickRegister = () => {\n    router.push(Router.register.path);\n  };\n  const onClickLogin = () => {\n    router.push(Router.login.path);\n  };\n  const onClickQuickStart = () => {\n    router.push(Router.main.path);\n  };\n\n  //ログイン管理\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(\n          login({\n            uid: user.uid,\n            displayName: user.displayName,\n            photoUrl: user.photoURL,\n          }),\n        );\n      }\n    });\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <Image src={EntranceImage} alt='EntranceImage' className={styles.home_image} />\n      <div className={styles.logo}>Tripper</div>\n      <Button\n        variant='contained'\n        size='medium'\n        onClick={onClickLogin}\n        className={styles.login_button}\n      >\n        ログイン\n      </Button>\n      <div className={styles.home_text}>\n        <h1>旅を共有して、いろいろな旅を知ろう</h1>\n      </div>\n      <Button\n        variant='contained'\n        endIcon={<SendIcon />}\n        size='large'\n        onClick={onClickRegister}\n        className={styles.register_button}\n      >\n        メンバーになってはじめる\n      </Button>\n      <Button\n        variant='contained'\n        endIcon={<SendIcon />}\n        onClick={onClickQuickStart}\n        className={styles.start_button}\n      >\n        いますぐはじめる\n      </Button>\n    </div>\n  );\n};\n\n// export const getStaticProps: GetStaticProps = async (context) => {\n//   return {\n//     props: {},\n//   };\n// };\n\nexport default HomeLayout;\n","/Users/hiroto/Documents/portfolio/tripper/src/components/pages/TripList/AddTripPlan.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/components/pages/TripList/PostForm.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/firebase.ts",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/Login/Login.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/Main/Plan/[id].tsx",["90","91"],[],"import React, { useState, useEffect } from 'react';\nimport { NextPage } from 'next';\nimport { useRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\n\n//- firebase\nimport { db } from '../../../firebase';\nimport {\n  doc,\n  getDoc,\n  DocumentData,\n  addDoc,\n  collection,\n  serverTimestamp,\n  query,\n  orderBy,\n  onSnapshot,\n} from 'firebase/firestore';\n\n//- 共通\nimport { Router } from '../../../router/router';\nimport { selectUser } from '../../../userSlice';\n\n//- MUI\nimport { Avatar } from '@material-ui/core';\nimport MessageIcon from '@material-ui/icons/Message';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n    marginRight: theme.spacing(1),\n  },\n}));\n\n//- スタイル\nimport styles from './id.module.scss';\n\n//型\ntype comment = {\n  id: string;\n  avatar: string;\n  text: string;\n  timestamp: string;\n  username: string;\n};\n\nconst Plan: NextPage = () => {\n  //- state\n  const user = useSelector(selectUser);\n  const classes = useStyles();\n  const [post, setPost] = useState<DocumentData>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [openComments, setOpenComments] = useState(false);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState<comment[]>([\n    {\n      id: '',\n      avatar: '',\n      text: '',\n      username: '',\n      timestamp: '',\n    },\n  ]);\n\n  //- フレームワーク\n  const router = useRouter();\n\n  //- 関数定義\n  const planId = router.query.id;\n\n  const getPost = async (): Promise<void> => {\n    setIsLoading(true);\n    try {\n      const docRef = doc(db, 'posts', `${planId}`);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setPost(data);\n      } else {\n        console.log('No such document!');\n      }\n    } catch (error: unknown) {\n      alert(`エラーが発生しました。エラー内容：${error}`);\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  const commentData = query(\n    collection(db, 'posts', `${planId}`, 'comments'),\n    orderBy('timestamp', 'desc'),\n  );\n\n  const getComment = onSnapshot(commentData, (snapshot) => {\n    setComments(\n      snapshot.docs.map((doc) => ({\n        id: doc.id,\n        avatar: doc.data().avatar,\n        text: doc.data().text,\n        username: doc.data().username,\n        timestamp: doc.data().timestamp,\n      })),\n    );\n  });\n\n  useEffect(() => {\n    getComment;\n  }, []);\n\n  const newComment = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    addDoc(collection(db, 'posts', `${planId}`, 'comments'), {\n      avatar: user.photoUrl,\n      text: comment,\n      timestamp: serverTimestamp(),\n      username: user.displayName,\n    });\n    setComment('');\n  };\n\n  const formattedTimestamp = (timestamp: any): string | null => {\n    if (!timestamp) return null;\n    return new Date(timestamp.toDate()).toLocaleString();\n  };\n\n  const backButton = () => {\n    router.push(Router.backToMain.path);\n  };\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.container}>\n        {isLoading && <p className={styles.loading}>...Loading</p>}\n        {post?.length === 0 && <p>※投稿がありません</p>}\n        {post ? (\n          <>\n            <div className={styles.plan_title}>{post.text}</div>\n            <div className={styles.plan_body}>{post.body}</div>\n          </>\n        ) : (\n          <p>No Data</p>\n        )}\n        <div className={styles.comment_open_container}>\n          <MessageIcon\n            className={styles.comment_open_icon}\n            onClick={() => setOpenComments(!openComments)}\n          />\n          <span className={styles.comment_open_text}>コメントする</span>\n        </div>\n\n        {openComments && (\n          <div className={styles.comment_and_form_container}>\n            {comments.map((com) => (\n              <div key={com.id} className={styles.comment_container}>\n                <Avatar src={com.avatar} className={classes.small} />\n                <span className={styles.comment_user}>@{com.username}</span>\n                <span className={styles.comment_text}>{com.text} </span>\n                <span className={styles.comment_time}>\n                  {com.timestamp && formattedTimestamp(com.timestamp)}\n                </span>\n              </div>\n            ))}\n            <form onSubmit={newComment}>\n              <div className={styles.comment_form}>\n                <input\n                  className={styles.comment_input}\n                  type='text'\n                  placeholder='コメントを入力してください'\n                  value={comment}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setComment(e.target.value)}\n                />\n                <button\n                  disabled={!comment}\n                  className={comment ? styles.comment_button : styles.comment_disable_button}\n                  type='submit'\n                >\n                  送信\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <button onClick={backButton} className={styles.back_button}>\n          戻る\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Plan;\n","/Users/hiroto/Documents/portfolio/tripper/src/pages/Main/TripLists.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/Register/Register.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/_app.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/api/AuthInfo.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/api/hello.ts",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/pages/index.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/router/router.ts",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/sample/index.tsx",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/store.ts",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/types/Post.ts",[],[],"/Users/hiroto/Documents/portfolio/tripper/src/userSlice.ts",[],[],{"ruleId":"92","severity":1,"message":"93","line":50,"column":6,"nodeType":"94","endLine":50,"endColumn":8,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":93,"column":6,"nodeType":"94","endLine":93,"endColumn":8,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"98","line":114,"column":6,"nodeType":"94","endLine":114,"endColumn":8,"suggestions":"99"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["101"],"React Hook useEffect has a missing dependency: 'getComment'. Either include it or remove the dependency array.",["102"],{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch]",{"range":"109","text":"110"},"Update the dependencies array to be: [getPost]",{"range":"111","text":"112"},"Update the dependencies array to be: [getComment]",{"range":"113","text":"114"},[1222,1224],"[dispatch]",[2076,2078],"[getPost]",[2551,2553],"[getComment]"]